on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

name: Detalle An√°lisis SonarQube

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get SonarQube Quality Gate Status
        id: sonarqube_status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X GET -u "${SONAR_TOKEN}": -o sonarqube.json '${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=Spuchifai'
          echo "::set-output name=sonarqube_status::$(cat sonarqube.json)"

      - name: Get SonarQube Measures
        id: sonarqube_measures
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X GET -u "${SONAR_TOKEN}": -o sonarqube_measures.json '${{ secrets.SONAR_HOST_URL }}/api/measures/component_tree?additionalFields=metrics&ps=500&asc=false&metricSort=new_duplicated_lines_density&s=metricPeriod&metricSortFilter=withMeasuresOnly&metricPeriodSort=1&component=Spuchifai&metricKeys=new_duplicated_lines_density,new_line_coverage,code_smells,new_bugs,new_vulnerabilities,new_security_hotspots_reviewed&strategy=leaves'
          echo "::set-output name=sonarqube_measures::$(cat sonarqube_measures.json)"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Detalle del An√°lisis de SonarQube:

            Estado del An√°lisis de SonarQube: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.status == 'OK' && '‚úÖ Exitoso' || '‚ùå Fallido' }}

            Condiciones:
              - M√©trica: Nuevo √çndice de Fiabilidad
                Estado: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[0].status == 'OK' && '‚úÖ Exitoso' || '‚ùå Fallido' }}
                Umbral de Error: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[0].errorThreshold }} (Cuanto menor es mejor)
                Valor Actual: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[0].actualValue }}
              - M√©trica: Nuevo √çndice de Seguridad
                Estado: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[1].status == 'OK' && '‚úÖ Exitoso' || '‚ùå Fallido' }}
                Umbral de Error: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[1].errorThreshold }} (Cuanto menor es mejor)
                Valor Actual: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[1].actualValue }}
              - M√©trica: Nuevo √çndice de Mantenibilidad
                Estado: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[2].status == 'OK' && '‚úÖ Exitoso' || '‚ùå Fallido' }}
                Umbral de Error: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[2].errorThreshold }} (Cuanto menor es mejor)
                Valor Actual: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[2].actualValue }}
              - M√©trica: Nueva Densidad de L√≠neas Duplicadas
                Estado: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[3].status == 'OK' && '‚úÖ Exitoso' || '‚ùå Fallido' }}
                Umbral de Error: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[3].errorThreshold }} (Cuanto menor es mejor)
                Valor Actual: ${{ fromJson(steps.sonarqube_status.outputs.sonarqube_status).projectStatus.conditions[3].actualValue }}

            Detalles de las M√©tricas:

            Componente: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].name }} (${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].path }}):
              - M√©trica: √çndice de L√≠neas Duplicadas en C√≥digo Nuevo
                Estado: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[0].period.value }}% (${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[0].bestValue ? 'mejor valor' : 'peor valor'}}) ‚öôÔ∏è

              - M√©trica: √çndice de Cobertura de L√≠neas en C√≥digo Nuevo
                Estado: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[1].period.value }}% (${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[1].bestValue ? 'mejor valor' : 'peor valor'}}) üîç

              - M√©trica: Code Smells (Malos Olores)
                Cantidad de Code Smells: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[2].value }} üì¶

              - M√©trica: Nuevos Bugs
                Cantidad de Bugs: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[3].value }} üêû

              - M√©trica: Nuevas Vulnerabilidades
                Cantidad de Vulnerabilidades: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[0].measures[4].value }} üîí

            Componente: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].name }} (${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].path }}):
              - M√©trica: √çndice de L√≠neas Duplicadas en C√≥digo Nuevo
                Estado: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].measures[0].period.value }}% (${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].measures[0].bestValue ? 'mejor valor' : 'peor valor'}}) ‚öôÔ∏è

              - M√©trica: Code Smells (Malos Olores)
                Cantidad de Code Smells: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].measures[1].value }} üì¶

              - M√©trica: Nuevos Bugs
                Cantidad de Bugs: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].measures[2].value }} üêû

              - M√©trica: Nuevas Vulnerabilidades
                Cantidad de Vulnerabilidades: ${{ fromJson(steps.sonarqube_measures.outputs.sonarqube_measures).components[1].measures[3].value }} üîí
