on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

name: Main Workflow

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get SonarQube Quality Gate Status
        id: sonarqube_status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X GET -u "${SONAR_TOKEN}": -o quality-gate.json '${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=Spuchifai'
          echo "status=$(cat quality-gate.json)" >> $GITHUB_ENV

      - name: Get SonarQube Measures
        id: sonarqube_measures
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X GET -u "${SONAR_TOKEN}": -o sonarqube_measures.json '${{ secrets.SONAR_HOST_URL }}/api/measures/component_tree?additionalFields=metrics&ps=500&asc=false&metricSort=new_duplicated_lines_density&s=metricPeriod&metricSortFilter=withMeasuresOnly&metricPeriodSort=1&component=${{secrets.SONAR_PROJECT_KEY}}&metricKeys=new_duplicated_lines_density,new_line_coverage,code_smells,new_bugs,new_vulnerabilities,new_security_hotspots_reviewed&strategy=leaves'
          sonarqube_measures=$(cat sonarqube_measures.json)
          echo "sonarqube_measures=${sonarqube_measures}" >> $GITHUB_ENV

      - name: Comment PR with SonarQube Measures
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            SonarQube Analysis Metrics:
            ${{ fromJson(env.SONARQUBE_MEASURES).components }}
            ${{ fromJson(env.SONARQUBE_MEASURES).components | map("- File: \(.name)\n  📊 Duplicated Lines Density: \(.measures[] | select(.metric == \"new_duplicated_lines_density\").period.value)\n  💡 Code Smells: \(.measures[] | select(.metric == \"code_smells\").value)\n  🐞 New Bugs: \(.measures[] | select(.metric == \"new_bugs\").period.value)\n  🛡️ New Vulnerabilities: \(.measures[] | select(.metric == \"new_vulnerabilities\").period.value)") | join("\n") | indent(4) }}


      - name: Block PR on SonarQube Analysis Failure
        if: env.status && fromJson(env.status).projectStatus.status == 'ERROR'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "The SonarQube analysis failed. Blocking the PR..."
          pr_number="${{ github.event.pull_request.number }}"
          owner="${{ github.repository_owner }}"
          repo="${{ github.repository }}"
          response=$(curl -X POST -v \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$owner/$repo/issues/$pr_number/lock" 2>&1)
          echo "$response"
