on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

name: Main Workflow

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get SonarQube Quality Gate Status
        id: sonarqube_status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X GET -u "${SONAR_TOKEN}": -o quality-gate.json '${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=Spuchifai'
          echo "::set-output name=status::$(cat quality-gate.json)"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Sonarqube Quality Gate | Project Status:
            ```
            ${{ steps.sonarqube_status.outputs.status }}
            ```
            Project Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.status }}
            Conditions:
              - Metric: new_reliability_rating
                Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[0].status == 'OK' && ':white_check_mark:' || ':x:' }}
                Error Threshold: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[0].errorThreshold }}
                Actual Value: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[0].actualValue }}
              - Metric: new_security_rating
                Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[1].status == 'OK' && ':white_check_mark:' || ':x:' }}
                Error Threshold: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[1].errorThreshold }}
                Actual Value: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[1].actualValue }}
              - Metric: new_maintainability_rating
                Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[2].status == 'OK' && ':white_check_mark:' || ':x:' }}
                Error Threshold: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[2].errorThreshold }}
                Actual Value: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[2].actualValue }}
              - Metric: new_duplicated_lines_density
                Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[3].status == 'OK' && ':white_check_mark:' || ':x:' }}
                Error Threshold: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[3].errorThreshold }}
                Actual Value: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.conditions[3].actualValue }}
            Ignored Conditions: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.ignoredConditions }}
            Period:
              Mode: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.period.mode }}
              Date: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.period.date }}
            Cayc Status: ${{ fromJson(steps.sonarqube_status.outputs.status).projectStatus.caycStatus }}
